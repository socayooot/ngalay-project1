.globl main 
.equ STDOUT, 1
.equ STDIN, 0
.equ __NR_READ, 63
.equ __NR_WRITE, 64
.equ __NR_EXIT, 93

//to run this code, compile
//continuously press the play button until "Enter a message:" is printed

//ouput: Enter a message
//Note: after the message is printed and you keep hitting run, you will get empty spaces

.text

main:
//main() prolog
	addi sp, sp, -104
	sw ra, 100(sp)

    la a0, prompt //Load the address of the prompt string
    call puts
    
// writes the character c , cast to an unsigned char , to stdout
// returns the same input unsigned char
putchar:
    addi sp, sp, -4         //Allocate space on the stack
    sb a0, 0(sp)             //Store the character on the stack
    li a7, __NR_WRITE        //a7 = system call number 64 for write
    li a0, STDOUT            //a0 = file descriptor for stdout
    mv a1, sp                //save the stack pointer to a1
    li a2, 1           //a2 = length of the string (1 byte)
    ecall                    //perform the system call
    addi sp, sp, 4           //Deallocate stack space
    ret

//puts function
puts:
    addi sp, sp, -16                                //allocate space on stack
    sw ra, 12(sp)                                   //store the ra at offset of 12
    mv t1, a0                                        //Save the address of the string into t1

puts_loop:
    lbu a0, 0(t1)                                   //Load a character
    beq a0, x0, exit_loop                     //If null exit the loop
    jal ra, putchar                               //call putchar
    addi t1, t1, 1                                //increment the address of the pointer
   
    j puts_loop                                   //loop until null character is found

exit_loop:
    lw ra, 12(sp)                               //restore the ra                            
    addi sp, sp, 16                           //restore the stack
    ret

puts_error:
    li a0, -1                                     //Return -1 on error
    ret


.data
prompt:   .ascii  "Enter a message: "
prompt_end:
buffer: .space 100 //allocate 1 byte of space for the buffer where a character will be stored
