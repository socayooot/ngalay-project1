.globl main
.equ STDOUT, 1
.equ STDIN, 0
.equ __NR_READ, 63
.equ __NR_WRITE, 64
.equ __NR_EXIT, 93


//to run this test, type a word into the input box.
//run the code

//output: the first character should be outputted to the terminal

.text

main:
    //main() prolog
    addi sp, sp, -4
    sw ra, 0(sp)

    call getchar  //Call getchar to read a character

    //Print the character read
    mv t0, a0
    mv a0, t0
    call putchar

exit_program:
    //used to terminate the entire program
    //main() epilog
    li a7, __NR_EXIT
    li a0, 0
    ecall

//getchar function
getchar:
    addi sp, sp, -8            // Allocate space on the stack for the return address (ra)
    sw ra, 4(sp)               // Store ra at offset 4 in the stack
    li a7, __NR_READ           // Load system call number for read (63)
    li a0, STDIN               // File descriptor for stdin (0)
    li a2, 1                   // Read 1 byte
    ecall                      // Make the system call (read)
    
    blt a0, x0, eof            // If result in a0 is negative, branch to eof (EOF or error)
    lbu a0, 0(a1)              // Load byte from buffer (a1 points to the buffer)
    
    lw ra, 4(sp)               // Restore return address (ra)
    addi sp, sp, 8             // Deallocate space from the stack
    ret

eof:
    li a0, -1                  // Return -1 on EOF or error
    lw ra, 4(sp)               // Restore return address (ra)
    addi sp, sp, 8             // Deallocate space from the stack
    ret
   
//putchar function
putchar:
    addi sp, sp, -4
    sb a0, 0(sp)
    li a7, __NR_WRITE
    li a0, STDOUT
    mv a1, sp
    li a2, 1
    ecall
    addi sp, sp, 4
    ret
