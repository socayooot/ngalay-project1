.globl main 
.equ STDOUT, 1
.equ STDIN, 0
.equ __NR_READ, 63
.equ __NR_WRITE, 64
.equ __NR_EXIT, 93

.text

main:
//main() prolog
    addi sp, sp, -104
    sw ra, 100(sp)

    //Test the putchar function
    li a0, 65           //'A' in ASCII
    call putchar       //Call putchar to output 'A'

    //Exit
    li a7, __NR_EXIT   //syscall to exit the program
    li a0, 0           //exit status 0
    ecall

//methods

//putchar function (same as you provided)
putchar:
    addi sp, sp, -4          //Allocate space on the stack
    sb a0, 0(sp)            //Store the character on the stack
    li a7, __NR_WRITE       //a7 = system call number 64 for write
    li a0, STDOUT           //a0 = file descriptor for stdout
    mv a1, sp               //Save the stack pointer to a1
    li a2, 1                //a2 = length of the string (1 byte)
    ecall                   //Perform the system call
    addi sp, sp, 4       //Deallocate stack space
    ret
